 - name: disable the nodejs
   ansible.builtin.command: dnf module disable nodejs -y

 - name: enable the nodejs
   ansible.builtin.command: dnf module enable nodejs:20 -y
  
 - name: install node -js
   ansible.builtin.dnf:
     name: "{{ item }}"
     state: installed
   loop:
    - nodejs
    - mysql
  
 - name: add the user
   ansible.builtin.user:
    name: expense
  
 - name: create an app directory
   ansible.builtin.file:
    path: /app
    state: directory
  
 - name: Download the backendcode
   ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip
  
 - name: unzip the file
   ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes
  
 - name: npm dependenices
   ansible.builtin.command: npm install
   args:
     chdir: /app
  
 - name: copy backend service
   ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service.j2
  
 - name: install python mysql dependencies
   ansible.builtin.pip:
     name:
     - PyMySQL
     - cryptography
     executable: pip3.9
  
 - name: import data into mysql
   community.mysql.mysql_db:
    login_user: root
    login_password: "{{ local_password  }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    state: import
    name: all
  
 - name: dameon reload
   ansible.builtin.systemd_service:
     daemon-reload: true

 - name: backend and enable service
   ansible.builtin.service:
     name: backend
     state: started
     enabled: yes